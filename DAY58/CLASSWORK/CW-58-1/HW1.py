#იპოვეთ სიიდან ყველაზე პატარა მნიშვნელობა პითონში, გამოიყენეთ for ციკლი

def find_smallest(numbers):
    smallest = numbers[0]
    for num in numbers:
        if num < smallest:
            smallest = num
    return smallest


numbers = [23, 54, 12, 67, 8, 94, 32]

smallest_value = find_smallest(numbers)
print(smallest_value)


'''
ფუნქციის განსაზღვრა: ჩვენ ვიწყებთ ფუნქციის განსაზღვრით, სახელწოდებით find_smallest, რომელიც იღებს ერთი პარამეტრის რიცხვებს, რომელიც, სავარაუდოდ, იქნება რიცხვების სია.


def find_smallest(ნომრები):
უმცირესი ცვლადის ინიციალიზაცია: ჩვენ ვვარაუდობთ, რომ სიაში პირველი რიცხვი ყველაზე პატარაა. ჩვენ ვაკეთებთ უმცირეს ცვლადის ინიციალიზაციას რიცხვების სიის პირველი ელემენტით.


უმცირესი = რიცხვები[0]
გამეორება სიაში: ჩვენ ვიყენებთ for loop-ს, რომ გავიმეოროთ რიცხვების სიაში თითოეულ ელემენტზე.


რიცხვებისთვის:
შეამოწმეთ უფრო მცირე მნიშვნელობები: სიაში თითოეული რიცხვისთვის (num), ჩვენ ვამოწმებთ, არის თუ არა ის პატარა, ვიდრე მიმდინარე უმცირესი მნიშვნელობა. თუ ასეა, ჩვენ ვაახლებთ უმცირეს ცვლადს ახალ მცირე მნიშვნელობამდე.


თუ num < უმცირესი:
 უმცირესი = რიცხვი
დააბრუნეთ უმცირესი მნიშვნელობა: სიაში ყველა რიცხვის გამეორების შემდეგ, ჩვენ ვაბრუნებთ უმცირესს საბოლოო მნიშვნელობას, რომელიც ახლა უნდა შეიცავდეს სიაში ნაპოვნი უმცირეს მნიშვნელობას.


დაბრუნება ყველაზე პატარა
გამოყენების მაგალითი: ჩვენ ვქმნით ნომრების სამაგალითო სიას და ამ სიით მოვუწოდებთ find_smallest ფუნქციას. ფუნქცია აბრუნებს უმცირეს მნიშვნელობას, რომელსაც შემდეგ ვბეჭდავთ კონსოლში.

რიცხვები = [23, 54, 12, 67, 8, 94, 32]
უმცირესი_მნიშვნელობა = პოვნა_პატარა (რიცხვები)
print ("ყველაზე პატარა მნიშვნელობა არის:", smallest_value)
მთლიანობაში, ფუნქცია იმეორებს სიის თითოეულ რიცხვს, აქამდე ნაპოვნი უმცირესი მნიშვნელობის თვალყურის დევნებას. მთელი სიის გამეორების შემდეგ, ის აბრუნებს უმცირეს მნიშვნელობას.
'''